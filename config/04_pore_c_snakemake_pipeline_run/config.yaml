
# paths to config files, note that these paths are relative to the snakemake work directory (-d flag)
basecalls: "../../config/03_pore_c_snakemake_pipeline_run/basecalls.tsv"
references: "../../config/03_pore_c_snakemake_pipeline_run/references.tsv"
phased_vcfs: "../../config/03_pore_c_snakemake_pipeline_run/phased_vcfs.tsv"
file_layout: "../../config/03_pore_c_snakemake_pipeline_run/file_layout.yaml"

output_dir: "results"

# a run will be split into batches of this size at the start of a pipeline in order
# to permit parallel execution. Warning - if this is set too low then snakemake can
# start to become sluggish.
reads_per_batch: 50000
# reads longer than this are filtered out (they can cause bwa-sw to crash)
max_read_length: 100000

matrix_resolutions:
  base: 1000
  zoomify:
    - 1000
    - 2000
    - 5000
    - 10000
    - 25000
    - 50000
    - 100000
    - 250000
    - 500000
    - 1000000
    - 2500000
    - 5000000
    - 10000000
software:
  juicer:
    tools_url: "https://s3.amazonaws.com/hicfiles.tc4ga.com/public/juicer/juicer_tools_1.19.02.jar"
  bwa:
    cli_opts: "bwasw -b 5 -q 2 -r 1 -T 15 -z 10"
    threads: 10
  pore_c:
    create_alignment_table:
      threads: 1
    to_cooler:
      threads: 10
    to_unsorted_pairs:
      threads: 1
    sort_pairs_file:
      threads: 10
    to_salsa_bed:
      threads: 4
  sort:
      threads: 10
      memory_per_thread: "4G"
  f5c:
      run_mode: cpu  # gpu
      tools_url: "https://github.com/hasindu2008/f5c/releases/download/v0.6/f5c-v0.6-binaries.tar.gz"
      version: "v0.6"
      settings:
        gpu:
          binary: "f5c_x86_64_linux_cuda"
          threads: 8
          gpus: 1
          cli_opts: "--cuda-dev-id 0 --cuda-mem-frac 0.7"
        cpu:
          binary: "f5c_x86_64_linux"
          threads: 20
          gpus: 0
          cli_opts: ""

# mapping_query: ""
mapping_query: ""
pore_c_version: 'rel'

